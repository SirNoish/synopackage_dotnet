using System;
using System.Collections.Generic;
using System.Text;
using System.Collections.Concurrent;
using Synopackage.Model.Caching.Enums;


namespace Synopackage.Model.Caching
{
  public partial class CacheOptionsManager
  {
    private ConcurrentDictionary<string, CacheSettings> _combinedSettings = new ConcurrentDictionary<string, CacheSettings>();

    private CacheSettings CombineCacheSettings(string sourceName, CacheSettings primary, CacheSettings defaults) 
    {
      if (_combinedSettings.ContainsKey(sourceName))
        return _combinedSettings[sourceName];

      CacheSettings result = new CacheSettings();
      {{~ for p in properties ~}}
      result.{{p.property_name}} = primary.{{p.property_name}} ?? defaults.{{p.property_name}};
      {{~ end ~}}
      _combinedSettings.TryAdd(sourceName, result);
      return result;
    }

    {{~for p in properties ~}}
    public {{p.property_type}} Get{{p.property_name}}(string sourceName = null) => GetCacheSettings(sourceName).{{p.property_name}}{{-if !p.allow_null_for_defaults-}}.Value{{-end-}};
    {{~ end ~}}

    
  }
}
